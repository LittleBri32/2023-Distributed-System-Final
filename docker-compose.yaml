version: "3.7"
services:
  front-envoy:
    build:
      context: .
      dockerfile: Dockerfile-frontenvoy
    networks:
      - envoymesh
    ports:
      - "8080:8080"
      - "8443:8443"
      - "8001:8001"

  service1:
    build:
      context: .
      dockerfile: Dockerfile-service1
    volumes:
      - ./service-envoy.yaml:/etc/service-envoy.yaml
    networks:
      - envoymesh
    environment:
      - SERVICE_NAME=1

  service2:
    build:
      context: .
      dockerfile: Dockerfile-service2
    volumes:
      - ./service-envoy.yaml:/etc/service-envoy.yaml
    networks:
      - envoymesh
    environment:
      - SERVICE_NAME=2

  service3:
    build:
      context: .
      dockerfile: Dockerfile-service3
    volumes:
      - ./service-envoy.yaml:/etc/service-envoy.yaml
    networks:
      - envoymesh
    environment:
      - SERVICE_NAME=3

  service4:
    build:
      context: .
      dockerfile: Dockerfile-service4
    volumes:
      - ./service-envoy.yaml:/etc/service-envoy.yaml
    networks:
      - envoymesh
    environment:
      - SERVICE_NAME=4

  ################add################

  mysql-server:
    build:
      context: .
      dockerfile: Dockerfile-mysqlServer
    image: mysql-database
    container_name: mysql-server
    networks:
      - envoymesh
    ports:
      - "3307:3307"
    environment:
      - MYSQL_ROOT_PASSWORD=secret
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: always

networks:
  envoymesh: {}
